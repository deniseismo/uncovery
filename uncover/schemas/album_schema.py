from dataclasses import dataclass
from datetime import datetime

from uncover.schemas.info_base import InfoBase


@dataclass
class AlbumInfo(InfoBase):
    title: str
    artist_name: str
    artist_names: list[str]
    names: list[str]
    rating: int
    image: str = None
    image_small: str = None
    image_medium: str = None
    filtered_title: str = None
    id: int = 0
    mbid: str = None
    spotify_name: str = None
    alternative_name: str = None
    spotify_id: str = None
    year: int = None

    def __post_init__(self):
        """
        remove leading slashes in static filenames (generated by url_for) of image files;
        avoids incorrect paths being constructed by os.path.join
        :return:
        """
        if isinstance(self.image, str):
            self.image = self.remove_leading_slash(self.image)
        if isinstance(self.image_small, str):
            self.image_small = self.remove_leading_slash(self.image_small)
        if isinstance(self.image_medium, str):
            self.image_medium = self.remove_leading_slash(self.image_medium)

    @staticmethod
    def remove_leading_slash(filename: str) -> str:
        """
        removes leading slashes "/" from the string
        :param filename: (str)
        :return: string with no "/" at the beginning
        """
        return filename.lstrip("/")

    def __repr__(self):
        album_description = f"Album({self.title}) by Artist({self.artist_name})"
        if self.year:
            album_description += f", {self.year}"
        return album_description

    def remove_duplicate_names(self):
        self.names = list(set(self.names))
        self.artist_names = list(set(self.artist_names))
